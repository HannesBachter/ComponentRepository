//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------

#include "TriggerHandlerCore.hh"


//
// trigger internal handler methods
//

	// handle CURLOAD
	void TriggerHandlerCore::handleCommNavigationObjects_MapperParams_CURLOADCore(const std::string &filename)
	{
		this->handleCommNavigationObjects_MapperParams_CURLOAD(filename);
	}

	// handle CURLOADLTM
	void TriggerHandlerCore::handleCommNavigationObjects_MapperParams_CURLOADLTMCore()
	{
		this->handleCommNavigationObjects_MapperParams_CURLOADLTM();
	}

	// handle CURPARAMETER
	void TriggerHandlerCore::handleCommNavigationObjects_MapperParams_CURPARAMETERCore(const int &xsize, const int &ysize, const int &xpos, const int &ypos, const int &id)
	{
		this->handleCommNavigationObjects_MapperParams_CURPARAMETER(xsize, ysize, xpos, ypos, id);
	}

	// handle CURSAVE
	void TriggerHandlerCore::handleCommNavigationObjects_MapperParams_CURSAVECore(const std::string &filename)
	{
		this->handleCommNavigationObjects_MapperParams_CURSAVE(filename);
	}

	// handle CURSAVEXPM
	void TriggerHandlerCore::handleCommNavigationObjects_MapperParams_CURSAVEXPMCore(const std::string &filename)
	{
		this->handleCommNavigationObjects_MapperParams_CURSAVEXPM(filename);
	}

	// handle LTMINITIALIZE
	void TriggerHandlerCore::handleCommNavigationObjects_MapperParams_LTMINITIALIZECore(const int &value)
	{
		this->handleCommNavigationObjects_MapperParams_LTMINITIALIZE(value);
	}

	// handle LTMLOAD
	void TriggerHandlerCore::handleCommNavigationObjects_MapperParams_LTMLOADCore(const std::string &filename)
	{
		this->handleCommNavigationObjects_MapperParams_LTMLOAD(filename);
	}

	// handle LTMLOADIEEESTD
	void TriggerHandlerCore::handleCommNavigationObjects_MapperParams_LTMLOADIEEESTDCore(const std::string &filename)
	{
		this->handleCommNavigationObjects_MapperParams_LTMLOADIEEESTD(filename);
	}

	// handle LTMLOADYAML
	void TriggerHandlerCore::handleCommNavigationObjects_MapperParams_LTMLOADYAMLCore(const std::string &filename)
	{
		this->handleCommNavigationObjects_MapperParams_LTMLOADYAML(filename);
	}

	// handle LTMPARAMETER
	void TriggerHandlerCore::handleCommNavigationObjects_MapperParams_LTMPARAMETERCore(const int &xsize, const int &ysize, const int &xpos, const int &ypos, const int &id)
	{
		this->handleCommNavigationObjects_MapperParams_LTMPARAMETER(xsize, ysize, xpos, ypos, id);
	}

	// handle LTMSAVE
	void TriggerHandlerCore::handleCommNavigationObjects_MapperParams_LTMSAVECore(const std::string &filename)
	{
		this->handleCommNavigationObjects_MapperParams_LTMSAVE(filename);
	}

	// handle LTMSAVEIEEESTD
	void TriggerHandlerCore::handleCommNavigationObjects_MapperParams_LTMSAVEIEEESTDCore(const std::string &filename)
	{
		this->handleCommNavigationObjects_MapperParams_LTMSAVEIEEESTD(filename);
	}

	// handle LTMSAVEXPM
	void TriggerHandlerCore::handleCommNavigationObjects_MapperParams_LTMSAVEXPMCore(const std::string &filename)
	{
		this->handleCommNavigationObjects_MapperParams_LTMSAVEXPM(filename);
	}

	// handle LTMSAVEYAMLPGM
	void TriggerHandlerCore::handleCommNavigationObjects_MapperParams_LTMSAVEYAMLPGMCore(const std::string &filename)
	{
		this->handleCommNavigationObjects_MapperParams_LTMSAVEYAMLPGM(filename);
	}

	// handle LTMSAVEYAMLPPM
	void TriggerHandlerCore::handleCommNavigationObjects_MapperParams_LTMSAVEYAMLPPMCore(const std::string &filename)
	{
		this->handleCommNavigationObjects_MapperParams_LTMSAVEYAMLPPM(filename);
	}

//
// extended trigger internal handler methods
//
