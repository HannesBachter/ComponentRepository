//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// This file is generated once. Modify this file to your needs. 
// If you want the toolchain to re-generate this file, please 
// delete it before running the code generator.
//--------------------------------------------------------------------------
#ifndef _SMARTGMAPPINGCORE_HH
#define _SMARTGMAPPINGCORE_HH
	
#include "aceSmartSoft.hh"
#include <iostream>

#include "values.h"
#include <utils/gvalues.h>
#include <gridfastslam/gridslamprocessor.h>
#include <utils/orientedboundingbox.h>
#include <utils/commandline.h>

class SmartGMappingCore
{
private:

public:
	SmartGMappingCore();

	double pi_to_pi(double angle){

	   angle+=M_PI;
	   double ret_angle = fmod(angle,2*M_PI);

	   if(angle<0)
	     ret_angle+=2*M_PI;

	   ret_angle-=M_PI;

	   return ret_angle;

	}



	GMapping::Map<double, GMapping::DoubleArray2D, false> * mymap;
	SmartACE::SmartMutex mapLock;
};
	
#endif
