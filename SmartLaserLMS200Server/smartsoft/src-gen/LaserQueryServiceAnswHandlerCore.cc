//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------
#include "LaserQueryServiceAnswHandlerCore.hh"

// include observers
#include "LaserTask.hh"

LaserQueryServiceAnswHandlerCore::LaserQueryServiceAnswHandlerCore(Smart::IQueryServerPattern<CommBasicObjects::CommVoid, CommBasicObjects::CommMobileLaserScan, SmartACE::QueryId>* server)
:	Smart::IQueryServerHandler<CommBasicObjects::CommVoid, CommBasicObjects::CommMobileLaserScan, SmartACE::QueryId>(server)
{
	
}

LaserQueryServiceAnswHandlerCore::~LaserQueryServiceAnswHandlerCore()
{
	
}

void LaserQueryServiceAnswHandlerCore::update_from(const Smart::TaskInteractionSubject* subject)
{
	// try typecasting into according Task or Upcall class
	 if(const LaserTask* laserTask = dynamic_cast<const LaserTask*>(subject)) {
		this->on_update_from(laserTask);
	}
}
